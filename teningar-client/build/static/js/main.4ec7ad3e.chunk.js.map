{"version":3,"sources":["components/DiceComponent.js","components/SimpleDicePage.js","config.js","components/GameScoreBoard.js","components/DiceGuessComponent.js","components/InfoContainer.js","TruthGuessComponent.js","components/OnlineGameComponent.js","components/WaitingRoom.js","components/OnlineDicePage.js","components/FrontPage.js","App.js","reportWebVitals.js","index.js"],"names":["DiceComponent","forwardRef","props","ref","dotColor","faceColor","numDice","numberOfDice","rollTime","disableIndividual","SimpleDicePage","useState","setNumberOfDice","diceFaceColor","setDiceFaceColor","diceDotColor","setDiceDotColor","createRef","Grid","container","spacing","justify","alignItems","style","maxWidth","margin","item","xs","Button","color","variant","onClick","current","rollAll","InputLabel","Input","value","onChange","e","target","label","config","GameScoreBoard","headCellStyle","fontWeight","textAlign","cellStyle","TableContainer","width","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","players","map","player","name","score","showDieRef","DiceGuessComponent","diceValue","diceGuess","setDiceGuess","useEffect","Card","padding","CardHeader","title","CardContent","paddingTop","type","num","parseInt","paddingBottom","Slider","marks","newValue","min","max","sendGuess","illegalGuess","InfoContainer","playerGuessingDice","playerGuessingTruth","isGuessTurn","TruthGuessComponent","marginBottom","sendTruth","marginTop","currentDieRef","OnlineGameComponent","diceNumbers","setDiceNumbers","setIllegalGuess","diceGuessTurn","setDiceGuessTurn","truthGuessTurn","setTruthGuessTurn","setPlayerGuessingTruth","setPlayerGuessingDice","currentGuess","setCurrentGuess","setIsGuessTurn","socket","on","data","length","renderCurrentGuessDie","Number","isInteger","emit","once","bool","WaitingRoom","setPlayers","sortedPlayers","setSortedPlayers","isLeader","setIsLeader","gameStarted","setGameStarted","startGame","roomName","ENDPOINT","OnlineDicePage","setRoomName","setName","connectedToRoom","setConnectedToRoom","undefined","setSocket","errorJoining","setErrorJoining","errorJoiningMsg","setErrorJoiningMsg","socketIOClient","connectToRoom","playerName","errorMsg","placeholder","FrontPage","playOption","setPlayOption","setResponse","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ec7ad3e.chunk.js","sourcesContent":["import React, { forwardRef } from \"react\";\r\nimport ReactDice from \"react-dice-complete\";\r\nimport \"react-dice-complete/dist/react-dice-complete.css\";\r\n\r\nconst DiceComponent = forwardRef((props, ref) => {\r\n  return (\r\n    <ReactDice\r\n      dotColor={props.dotColor ?? \"#eeeeee\"}\r\n      faceColor={props.faceColor ?? \"#111111\"}\r\n      numDice={props.numberOfDice}\r\n      rollTime={0.5}\r\n      ref={ref}\r\n      disableIndividual\r\n    />\r\n  );\r\n});\r\n\r\nexport default DiceComponent;\r\n","import React, { createRef, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  Grid,\r\n  InputLabel,\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport DiceComponent from \"./DiceComponent\";\r\n\r\nconst SimpleDicePage = () => {\r\n  const [numberOfDice, setNumberOfDice] = useState(6);\r\n  const [diceFaceColor, setDiceFaceColor] = useState(\"#EEEEEE\");\r\n  const [diceDotColor, setDiceDotColor] = useState(\"#111111\");\r\n  const ref = createRef();\r\n\r\n  const rollDice = () => {\r\n    if (ref.current) {\r\n      ref.current.rollAll();\r\n    }\r\n  };\r\n\r\n  const removeDice = () => {\r\n    if (numberOfDice > 0) {\r\n      setNumberOfDice(numberOfDice - 1);\r\n    }\r\n  };\r\n  const addDice = () => {\r\n    setNumberOfDice(numberOfDice + 1);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      style={{ maxWidth: 800, margin: \"auto\" }}\r\n    >\r\n      <Grid item xs={12}>\r\n        <DiceComponent\r\n          dotColor={diceDotColor}\r\n          faceColor={diceFaceColor}\r\n          numberOfDice={numberOfDice}\r\n          ref={ref}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={4}>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={rollDice}>\r\n          Roll dice\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={removeDice}>\r\n          Remove dice\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={addDice}>\r\n          Add dice\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <InputLabel>Face color</InputLabel>\r\n        <Input\r\n          value={diceFaceColor}\r\n          onChange={(e) => setDiceFaceColor(e.target.value)}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <InputLabel>Dot color</InputLabel>\r\n        <Input\r\n          label=\"Dot color\"\r\n          value={diceDotColor}\r\n          onChange={(e) => setDiceDotColor(e.target.value)}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SimpleDicePage;\r\n","export const config = {\r\n  // ENDPOINT: \"http://127.0.0.1:8000\",\r\n  ENDPOINT: \"http://teningar.herokuapp.com/\",\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  TableContainer,\r\n  Paper,\r\n  TableCell,\r\n  TableRow,\r\n  TableBody,\r\n  TableHead,\r\n  Table,\r\n} from \"@material-ui/core\";\r\n\r\nconst GameScoreBoard = (props) => {\r\n  const headCellStyle = { fontWeight: \"bold\", textAlign: \"center\" };\r\n  const cellStyle = { textAlign: \"center\" };\r\n  return (\r\n    <TableContainer style={{ margin: \"auto\", width: 300 }} component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell style={headCellStyle}>Name</TableCell>\r\n            <TableCell style={headCellStyle}>Score</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.players.map((player) => (\r\n            <TableRow key={player.name}>\r\n              <TableCell style={cellStyle}>{player.name} </TableCell>\r\n              <TableCell style={cellStyle}>{player.score}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default GameScoreBoard;\r\n","import React, { createRef, useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Input,\r\n  Button,\r\n  InputLabel,\r\n  Slider,\r\n  CardHeader,\r\n} from \"@material-ui/core\";\r\nimport ReactDice from \"react-dice-complete\";\r\nimport \"react-dice-complete/dist/react-dice-complete.css\";\r\n\r\nconst showDieRef = createRef();\r\n\r\nconst DiceGuessComponent = (props) => {\r\n  const [diceGuess, setDiceGuess] = useState({ numberOfDice: 0, diceValue: 1 });\r\n\r\n  const renderShowDie = () => {\r\n    return (\r\n      <ReactDice\r\n        dotColor={\"#eeeeee\"}\r\n        faceColor={\"#111111\"}\r\n        numDice={1}\r\n        rollTime={0.1}\r\n        disableIndividual\r\n        ref={showDieRef}\r\n      />\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    if (showDieRef.current && diceGuess.diceValue) {\r\n      showDieRef.current.rollAll([diceGuess.diceValue]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Card style={{ margin: \"auto\", padding: 15, maxWidth: 400 }}>\r\n        <CardHeader title=\"Guess the dice\" />\r\n        <CardContent>\r\n          <Grid item xs={12} style={{ paddingTop: 15 }}>\r\n            <InputLabel>Number of Dice</InputLabel>\r\n            <Input\r\n              type=\"number\"\r\n              value={diceGuess.numberOfDice}\r\n              onChange={(e) => {\r\n                const num = parseInt(e.target.value);\r\n                if (num) {\r\n                  setDiceGuess({\r\n                    ...diceGuess,\r\n                    numberOfDice: parseInt(e.target.value),\r\n                  });\r\n                } else {\r\n                  setDiceGuess({\r\n                    ...diceGuess,\r\n                    numberOfDice: \"\",\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} style={{ paddingTop: 15, paddingBottom: 15 }}>\r\n            <InputLabel>Dice value</InputLabel>\r\n            <Slider\r\n              marks\r\n              value={diceGuess.diceValue}\r\n              onChange={(e, newValue) => {\r\n                setDiceGuess({ ...diceGuess, diceValue: newValue });\r\n                showDieRef.current.rollAll([newValue]);\r\n              }}\r\n              min={1}\r\n              max={6}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {diceGuess.numberOfDice} of\r\n            {renderShowDie()}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => props.sendGuess(diceGuess)}\r\n            >\r\n              Send Guess\r\n            </Button>\r\n          </Grid>\r\n          {props.illegalGuess && (\r\n            <Grid item xs={12}>\r\n              Guess was illegal\r\n            </Grid>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default DiceGuessComponent;\r\n","import React from \"react\";\r\nimport { Card, CardContent, Grid } from \"@material-ui/core\";\r\n\r\nconst InfoContainer = (props) => {\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Card style={{ margin: \"auto\", maxWidth: 400 }}>\r\n        <CardContent>\r\n          <Grid item xs={12}>\r\n            {props.playerGuessingDice} betting on dice\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {props.playerGuessingTruth} calling {props.playerGuessingDice}'s bet\r\n          </Grid>\r\n          {props.isGuessTurn ? (\r\n            <Grid item xs={12}>\r\n              {props.playerGuessingDice} is about to make the bet\r\n            </Grid>\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              {props.playerGuessingDice} has made the bet\r\n            </Grid>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default InfoContainer;\r\n","import React from \"react\";\r\nimport { Card, CardContent, CardHeader, Grid, Button } from \"@material-ui/core\";\r\n\r\nconst TruthGuessComponent = (props) => {\r\n  return (\r\n    <Card style={{ margin: \"auto\", marginBottom: 20 }}>\r\n      <CardHeader title=\"Is the guess truth or Bluff?\" />\r\n      <CardContent>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => props.sendTruth(true)}\r\n          >\r\n            Truth\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12} style={{ marginTop: 15 }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={() => props.sendTruth(false)}\r\n          >\r\n            Bluffing\r\n          </Button>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TruthGuessComponent;\r\n","import React, { createRef, useEffect, useState } from \"react\";\r\nimport { Grid, Card, CardContent } from \"@material-ui/core\";\r\nimport ReactDice from \"react-dice-complete\";\r\nimport \"react-dice-complete/dist/react-dice-complete.css\";\r\nimport DiceComponent from \"./DiceComponent\";\r\nimport GameScoreBoard from \"./GameScoreBoard\";\r\nimport DiceGuessComponent from \"./DiceGuessComponent\";\r\nimport InfoContainer from \"./InfoContainer\";\r\nimport TruthGuessComponent from \"../TruthGuessComponent\";\r\n\r\nconst ref = createRef();\r\n\r\nconst currentDieRef = createRef();\r\nconst OnlineGameComponent = (props) => {\r\n  const [diceNumbers, setDiceNumbers] = useState([]);\r\n  const [illegalGuess, setIllegalGuess] = useState(false);\r\n  const [diceGuessTurn, setDiceGuessTurn] = useState(false);\r\n  const [truthGuessTurn, setTruthGuessTurn] = useState(false);\r\n  const [playerGuessingTruth, setPlayerGuessingTruth] = useState(\"\");\r\n  const [playerGuessingDice, setPlayerGuessingDice] = useState(\"\");\r\n  const [currentGuess, setCurrentGuess] = useState({\r\n    diceValue: 1,\r\n    numberOfDice: 0,\r\n  });\r\n  const [isGuessTurn, setIsGuessTurn] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!props.socket) return;\r\n    props.socket.on(\"diceRolled\", (data) => {\r\n      setDiceNumbers(data);\r\n      if (ref.current) {\r\n        ref.current.rollAll(data);\r\n      }\r\n    });\r\n\r\n    if (currentDieRef.current) {\r\n      currentDieRef.current.rollAll([1]);\r\n    }\r\n\r\n    props.socket.on(\"turnInfo\", (data) => {\r\n      setPlayerGuessingDice(data.playerGuessingDice);\r\n      setPlayerGuessingTruth(data.playerGuessingTruth);\r\n      setCurrentGuess(data.currentGuess);\r\n      setIsGuessTurn(data.isGuessTurn);\r\n      currentDieRef.current.rollAll([data.currentGuess.diceValue]);\r\n    });\r\n\r\n    props.socket.on(\"getGuess\", () => {\r\n      setDiceGuessTurn(true);\r\n    });\r\n\r\n    props.socket.on(\"getTruth\", () => {\r\n      setTruthGuessTurn(true);\r\n    });\r\n  }, [props.socket]);\r\n\r\n  const renderCurrentGuessDie = () => {\r\n    return (\r\n      <ReactDice\r\n        dotColor={props.dotColor ?? \"#ee77ee\"}\r\n        faceColor={props.faceColor ?? \"#6f1111\"}\r\n        numDice={1}\r\n        rollTime={0.1}\r\n        disableIndividual\r\n        ref={currentDieRef}\r\n      />\r\n    );\r\n  };\r\n\r\n  const sendTruth = (bool) => {\r\n    props.socket.emit(\"sendTruth\", bool);\r\n    setTruthGuessTurn(false);\r\n  };\r\n\r\n  const sendGuess = (diceGuess) => {\r\n    if (\r\n      Number.isInteger(diceGuess.diceValue) &&\r\n      Number.isInteger(diceGuess.numberOfDice) &&\r\n      diceGuess.diceValue > 0 &&\r\n      diceGuess.diceValue <= 6\r\n    ) {\r\n      props.socket.emit(\"sendGuess\", diceGuess);\r\n      props.socket.once(\"legalGuess\", (bool) => {\r\n        if (bool) {\r\n          setDiceGuessTurn(false);\r\n          setIllegalGuess(false);\r\n        } else {\r\n          setIllegalGuess(true);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <DiceComponent ref={ref} numberOfDice={diceNumbers.length} />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Card style={{ maxWidth: 200, margin: \"auto\" }}>\r\n          <CardContent>\r\n            Current guess is {currentGuess.numberOfDice} of\r\n            {renderCurrentGuessDie()}\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      {diceGuessTurn && (\r\n        <DiceGuessComponent\r\n          socket={props.socket}\r\n          setDiceGuessTurn={setDiceGuessTurn}\r\n          illegalGuess={illegalGuess}\r\n          sendGuess={sendGuess}\r\n        />\r\n      )}\r\n      {truthGuessTurn && <TruthGuessComponent sendTruth={sendTruth} />}\r\n      <InfoContainer\r\n        playerGuessingDice={playerGuessingDice}\r\n        playerGuessingTruth={playerGuessingTruth}\r\n        isGuessTurn={isGuessTurn}\r\n      />\r\n\r\n      <Grid item xs={12}>\r\n        <h5>Players in game</h5>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <GameScoreBoard players={props.players} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default OnlineGameComponent;\r\n","import { Grid, Button } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport OnlineGameComponent from \"./OnlineGameComponent\";\r\nimport GameScoreBoard from \"./GameScoreBoard\";\r\n\r\nconst WaitingRoom = (props) => {\r\n  const [players, setPlayers] = useState([]);\r\n  // sorted by score\r\n  const [sortedPlayers, setSortedPlayers] = useState([]);\r\n  const [isLeader, setIsLeader] = useState(false);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.socket.on(\"playerUpdate\", (data) => {\r\n      setPlayers(data);\r\n      setSortedPlayers(data);\r\n    });\r\n\r\n    props.socket.on(\"allowStartGame\", (data) => {\r\n      setIsLeader(true);\r\n    });\r\n\r\n    props.socket.on(\"gameStarted\", () => {\r\n      setGameStarted(true);\r\n    });\r\n\r\n    props.socket.on(\"gameOver\", (data) => {\r\n      setGameStarted(false);\r\n      setPlayers(data);\r\n      setSortedPlayers(data);\r\n    });\r\n  }, []);\r\n\r\n  const startGame = () => {\r\n    props.socket.emit(\"startGame\", {});\r\n  };\r\n\r\n  const renderWaitingRoom = () => (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <h3>Waiting room for room '{props.roomName}'</h3>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <h5>Players waiting</h5>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <GameScoreBoard players={sortedPlayers} />\r\n      </Grid>\r\n      {isLeader && (\r\n        <Grid item xs={12}>\r\n          <Button onClick={startGame} variant=\"contained\">\r\n            Start game\r\n          </Button>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n\r\n  return !gameStarted ? (\r\n    renderWaitingRoom()\r\n  ) : (\r\n    <OnlineGameComponent players={players} socket={props.socket} />\r\n  );\r\n};\r\n\r\nexport default WaitingRoom;\r\n","import { Input, Button, Grid, Card, CardContent } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { config } from \"../config\";\r\nimport WaitingRoom from \"./WaitingRoom\";\r\n\r\nconst ENDPOINT = config.ENDPOINT;\r\nconst OnlineDicePage = () => {\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [connectedToRoom, setConnectedToRoom] = useState(false);\r\n  const [socket, setSocket] = useState(undefined);\r\n  const [errorJoining, setErrorJoining] = useState(false);\r\n  const [errorJoiningMsg, setErrorJoiningMsg] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const socket = socketIOClient(ENDPOINT);\r\n    setSocket(socket);\r\n    socket.on(\"connectedToRoomCallBack\", (data) => {});\r\n  }, []);\r\n\r\n  const connectToRoom = () => {\r\n    socket.emit(\"connectToRoom\", { playerName: name, roomName: roomName });\r\n    socket.once(\"errorJoining\", (data) => {\r\n      if (!data.errorJoining) {\r\n        setConnectedToRoom(true);\r\n        setErrorJoining(false);\r\n        setErrorJoiningMsg(\"\");\r\n      } else {\r\n        setErrorJoining(true);\r\n        setErrorJoiningMsg(data.errorMsg);\r\n      }\r\n    });\r\n  };\r\n\r\n  const renderConnectToRoom = () => (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <h3>Online dice page</h3>\r\n      </Grid>\r\n      <Card style={{ margin: \"auto\" }}>\r\n        <CardContent>\r\n          <Grid item xs={12}>\r\n            <Input\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              placeholder=\"Name\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} style={{ paddingTop: 15, paddingBottom: 15 }}>\r\n            <Input\r\n              placeholder=\"Room name\"\r\n              value={roomName}\r\n              onChange={(e) => setRoomName(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button color=\"primary\" variant=\"contained\" onClick={connectToRoom}>\r\n              Connect to room\r\n            </Button>\r\n          </Grid>\r\n          {errorJoining && (\r\n            <Grid item xs={12}>\r\n              {errorJoiningMsg}\r\n            </Grid>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  return !connectedToRoom ? (\r\n    renderConnectToRoom()\r\n  ) : (\r\n    <WaitingRoom roomName={roomName} socket={socket} />\r\n  );\r\n};\r\n\r\nexport default OnlineDicePage;\r\n","import { Grid, Button, Card, CardContent } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport SimpleDicePage from \"./SimpleDicePage\";\r\nimport OnlineDicePage from \"./OnlineDicePage\";\r\nimport \"./FrontPage.css\";\r\nimport { config } from \"../config\";\r\n\r\nconst ENDPOINT = config.ENDPOINT;\r\n\r\nconst FrontPage = () => {\r\n  const [playOption, setPlayOption] = useState(\"NONE\");\r\n\r\n  const [response, setResponse] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const socket = socketIOClient(ENDPOINT);\r\n    socket.on(\"FromAPI\", (data) => {\r\n      setResponse(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className=\"container\"\r\n    >\r\n      {playOption === \"SIMPLE\" && (\r\n        <Grid item xs={12}>\r\n          <SimpleDicePage />\r\n        </Grid>\r\n      )}\r\n      {playOption === \"ONLINE\" && (\r\n        <Grid item xs={12}>\r\n          <OnlineDicePage />\r\n        </Grid>\r\n      )}\r\n      {playOption === \"NONE\" && (\r\n        <Card style={{ width: 300, marginTop: 30 }}>\r\n          <CardContent>\r\n            <Grid item xs={6} style={{ paddingBottom: 20, margin: \"auto\" }}>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={() => setPlayOption(\"SIMPLE\")}\r\n              >\r\n                Play simple\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6} style={{ margin: \"auto\" }}>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={() => setPlayOption(\"ONLINE\")}\r\n              >\r\n                Play online\r\n              </Button>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FrontPage;\r\n","import \"./App.css\";\nimport FrontPage from \"./components/FrontPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"header\">Dice game</div>\n      <FrontPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}