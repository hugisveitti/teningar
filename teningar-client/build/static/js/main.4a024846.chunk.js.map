{"version":3,"sources":["components/DiceComponent.js","components/SimpleDicePage.js","config.js","components/GameScoreBoard.js","components/DiceGuessComponent.js","components/InfoContainer.js","components/TruthGuessComponent.js","components/EndOfRoundInfoComponent.js","components/OnlineGameComponent.js","components/WaitingRoom.js","components/OnlineDicePage.js","components/FrontPage.js","App.js","reportWebVitals.js","index.js"],"names":["DiceComponent","forwardRef","props","ref","useEffect","diceNumbers","current","rollAll","dotColor","faceColor","numDice","numberOfDice","rollTime","disableIndividual","dieSize","value","margin","SimpleDicePage","useState","setNumberOfDice","diceFaceColor","setDiceFaceColor","diceDotColor","setDiceDotColor","createRef","Grid","container","spacing","justify","alignItems","style","maxWidth","item","xs","Button","color","variant","onClick","InputLabel","Input","onChange","e","target","label","config","ENDPOINT","window","location","hostname","GameScoreBoard","headCellStyle","fontWeight","textAlign","cellStyle","TableContainer","width","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","players","map","player","name","score","showDieRef","DiceGuessComponent","diceValue","diceGuess","setDiceGuess","Card","padding","CardHeader","title","CardContent","paddingTop","type","num","parseInt","paddingBottom","Slider","marks","newValue","min","max","sendGuess","illegalGuess","InfoContainer","playerGuessingDice","playerGuessingTruth","isGuessTurn","TruthGuessComponent","marginBottom","sendTruth","marginTop","useStyles","makeStyles","theme","modal","display","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","EndOfRoundInfoComponent","isOpen","setIsOpen","classes","roundInfoMsg","setRoundInfoMsg","playersRoundInfo","setPlayersRoundInfo","data","console","log","infoMsg","Modal","open","onClose","className","playerInfo","align","length","renderPersonInfo","currentDieRef","OnlineGameComponent","setDiceNumbers","setIllegalGuess","diceGuessTurn","setDiceGuessTurn","truthGuessTurn","setTruthGuessTurn","setPlayerGuessingTruth","setPlayerGuessingDice","currentGuess","setCurrentGuess","setIsGuessTurn","undefined","endOfRoundInfo","setEndOfRoundInfo","socket","on","renderCurrentGuessDie","Number","isInteger","emit","once","bool","WaitingRoom","setPlayers","sortedPlayers","setSortedPlayers","isLeader","setIsLeader","gameStarted","setGameStarted","startGame","roomName","OnlineDicePage","setRoomName","setName","connectedToRoom","setConnectedToRoom","setSocket","errorJoining","setErrorJoining","errorJoiningMsg","setErrorJoiningMsg","socketIOClient","connectToRoom","playerName","errorMsg","placeholder","FrontPage","playOption","setPlayOption","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a024846.chunk.js","sourcesContent":["import React, { forwardRef, useEffect } from \"react\";\r\nimport ReactDice from \"react-dice-complete\";\r\nimport \"react-dice-complete/dist/react-dice-complete.css\";\r\n\r\nconst DiceComponent = forwardRef((props, ref) => {\r\n  useEffect(() => {\r\n    if (props.diceNumbers) {\r\n      ref.current.rollAll(props.diceNumbers);\r\n    }\r\n  }, [ref, props.diceNumbers]);\r\n\r\n  return (\r\n    <ReactDice\r\n      dotColor={props.dotColor ?? \"#eeeeee\"}\r\n      faceColor={props.faceColor ?? \"#111111\"}\r\n      numDice={props.numberOfDice}\r\n      rollTime={0.5}\r\n      ref={ref}\r\n      disableIndividual\r\n      dieSize={props.dieSize ?? 60}\r\n      value={props.diceNumbers}\r\n      margin={props.margin ?? 15}\r\n    />\r\n  );\r\n});\r\n\r\nexport default DiceComponent;\r\n","import React, { createRef, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  Grid,\r\n  InputLabel,\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport DiceComponent from \"./DiceComponent\";\r\n\r\nconst SimpleDicePage = () => {\r\n  const [numberOfDice, setNumberOfDice] = useState(6);\r\n  const [diceFaceColor, setDiceFaceColor] = useState(\"#EEEEEE\");\r\n  const [diceDotColor, setDiceDotColor] = useState(\"#111111\");\r\n  const ref = createRef();\r\n\r\n  const rollDice = () => {\r\n    if (ref.current) {\r\n      ref.current.rollAll();\r\n    }\r\n  };\r\n\r\n  const removeDice = () => {\r\n    if (numberOfDice > 0) {\r\n      setNumberOfDice(numberOfDice - 1);\r\n    }\r\n  };\r\n  const addDice = () => {\r\n    setNumberOfDice(numberOfDice + 1);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      style={{ maxWidth: 800, margin: \"auto\" }}\r\n    >\r\n      <Grid item xs={12}>\r\n        <DiceComponent\r\n          dotColor={diceDotColor}\r\n          faceColor={diceFaceColor}\r\n          numberOfDice={numberOfDice}\r\n          ref={ref}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={4}>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={rollDice}>\r\n          Roll dice\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={removeDice}>\r\n          Remove dice\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={addDice}>\r\n          Add dice\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <InputLabel>Face color</InputLabel>\r\n        <Input\r\n          value={diceFaceColor}\r\n          onChange={(e) => setDiceFaceColor(e.target.value)}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <InputLabel>Dot color</InputLabel>\r\n        <Input\r\n          label=\"Dot color\"\r\n          value={diceDotColor}\r\n          onChange={(e) => setDiceDotColor(e.target.value)}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SimpleDicePage;\r\n","export const config = {\r\n  // ENDPOINT: \"http://127.0.0.1:8000\",\r\n  ENDPOINT:\r\n    process.env.NODE_ENV === \"production\"\r\n      ? window.location.hostname\r\n      : \"localhost:8000\",\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  TableContainer,\r\n  Paper,\r\n  TableCell,\r\n  TableRow,\r\n  TableBody,\r\n  TableHead,\r\n  Table,\r\n} from \"@material-ui/core\";\r\n\r\nconst GameScoreBoard = (props) => {\r\n  const headCellStyle = { fontWeight: \"bold\", textAlign: \"center\" };\r\n  const cellStyle = { textAlign: \"center\" };\r\n  return (\r\n    <TableContainer style={{ margin: \"auto\", width: 300 }} component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell style={headCellStyle}>Name</TableCell>\r\n            <TableCell style={headCellStyle}>Score</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.players.map((player) => (\r\n            <TableRow key={player.name}>\r\n              <TableCell style={cellStyle}>{player.name} </TableCell>\r\n              <TableCell style={cellStyle}>{player.score}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default GameScoreBoard;\r\n","import React, { createRef, useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Input,\r\n  Button,\r\n  InputLabel,\r\n  Slider,\r\n  CardHeader,\r\n} from \"@material-ui/core\";\r\nimport ReactDice from \"react-dice-complete\";\r\nimport \"react-dice-complete/dist/react-dice-complete.css\";\r\n\r\nconst showDieRef = createRef();\r\n\r\nconst DiceGuessComponent = (props) => {\r\n  const [diceGuess, setDiceGuess] = useState({ numberOfDice: 0, diceValue: 1 });\r\n\r\n  const renderShowDie = () => {\r\n    return (\r\n      <ReactDice\r\n        dotColor={\"#eeeeee\"}\r\n        faceColor={\"#111111\"}\r\n        numDice={1}\r\n        rollTime={0.1}\r\n        disableIndividual\r\n        ref={showDieRef}\r\n      />\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    if (showDieRef.current && diceGuess.diceValue) {\r\n      showDieRef.current.rollAll([diceGuess.diceValue]);\r\n    }\r\n  }, [diceGuess.diceValue]);\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Card style={{ margin: \"auto\", padding: 15, maxWidth: 400 }}>\r\n        <CardHeader title=\"Guess the dice\" />\r\n        <CardContent>\r\n          <Grid item xs={12} style={{ paddingTop: 15 }}>\r\n            <InputLabel>Number of Dice</InputLabel>\r\n            <Input\r\n              type=\"number\"\r\n              value={diceGuess.numberOfDice}\r\n              onChange={(e) => {\r\n                const num = parseInt(e.target.value);\r\n                if (num) {\r\n                  setDiceGuess({\r\n                    ...diceGuess,\r\n                    numberOfDice: parseInt(e.target.value),\r\n                  });\r\n                } else {\r\n                  setDiceGuess({\r\n                    ...diceGuess,\r\n                    numberOfDice: \"\",\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} style={{ paddingTop: 15, paddingBottom: 15 }}>\r\n            <InputLabel>Dice value</InputLabel>\r\n            <Slider\r\n              marks\r\n              value={diceGuess.diceValue}\r\n              onChange={(e, newValue) => {\r\n                setDiceGuess({ ...diceGuess, diceValue: newValue });\r\n                showDieRef.current.rollAll([newValue]);\r\n              }}\r\n              min={1}\r\n              max={6}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {diceGuess.numberOfDice} of\r\n            {renderShowDie()}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => props.sendGuess(diceGuess)}\r\n            >\r\n              Send Guess\r\n            </Button>\r\n          </Grid>\r\n          {props.illegalGuess && (\r\n            <Grid item xs={12}>\r\n              Guess was illegal\r\n            </Grid>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default DiceGuessComponent;\r\n","import React from \"react\";\r\nimport { Card, CardContent, Grid } from \"@material-ui/core\";\r\n\r\nconst InfoContainer = (props) => {\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Card style={{ margin: \"auto\", maxWidth: 400 }}>\r\n        <CardContent>\r\n          <Grid item xs={12}>\r\n            {props.playerGuessingDice} betting on dice\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {props.playerGuessingTruth} calling {props.playerGuessingDice}'s bet\r\n          </Grid>\r\n          {props.isGuessTurn ? (\r\n            <Grid item xs={12}>\r\n              {props.playerGuessingDice} is about to make the bet\r\n            </Grid>\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              {props.playerGuessingDice} has made the bet\r\n            </Grid>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default InfoContainer;\r\n","import React from \"react\";\r\nimport { Card, CardContent, CardHeader, Grid, Button } from \"@material-ui/core\";\r\n\r\nconst TruthGuessComponent = (props) => {\r\n  return (\r\n    <Card style={{ margin: \"auto\", marginBottom: 20 }}>\r\n      <CardHeader title=\"Is the guess truth or Bluff?\" />\r\n      <CardContent>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => props.sendTruth(true)}\r\n          >\r\n            Truth\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12} style={{ marginTop: 15 }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={() => props.sendTruth(false)}\r\n          >\r\n            Bluffing\r\n          </Button>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TruthGuessComponent;\r\n","import React, { createRef, useEffect, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  makeStyles,\r\n  TableContainer,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n} from \"@material-ui/core\";\r\nimport DiceComponent from \"./DiceComponent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst EndOfRoundInfoComponent = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const classes = useStyles();\r\n  const [roundInfoMsg, setRoundInfoMsg] = useState(\"\");\r\n  const [playersRoundInfo, setPlayersRoundInfo] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (props.data) {\r\n      setIsOpen(true);\r\n      console.log(props.data);\r\n      setPlayersRoundInfo(props.data.playersRoundInfo);\r\n      setRoundInfoMsg(props.data.infoMsg);\r\n    }\r\n  }, [props.data]);\r\n\r\n  const handleClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const renderPersonInfo = (player) => {\r\n    const ref = createRef();\r\n    console.log(\"dicenumbs\", player.diceNumbers);\r\n    return (\r\n      <TableRow key={player.name}>\r\n        <TableCell align=\"center\">{player.name}</TableCell>\r\n        <TableCell align=\"center\">\r\n          <DiceComponent\r\n            diceNumbers={player.diceNumbers}\r\n            numberOfDice={player.diceNumbers.length}\r\n            dieSize={20}\r\n            margin={3}\r\n            ref={ref}\r\n          />\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal open={isOpen} onClose={handleClose} className={classes.modal}>\r\n      <div className={classes.paper}>\r\n        <h3>End of round info</h3>\r\n        <p>{roundInfoMsg}</p>\r\n        <h5>Player's dice</h5>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableBody>\r\n              {playersRoundInfo?.map((playerInfo) => {\r\n                return renderPersonInfo(playerInfo);\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EndOfRoundInfoComponent;\r\n","import React, { createRef, useEffect, useState } from \"react\";\r\nimport { Grid, Card, CardContent } from \"@material-ui/core\";\r\nimport ReactDice from \"react-dice-complete\";\r\nimport \"react-dice-complete/dist/react-dice-complete.css\";\r\nimport DiceComponent from \"./DiceComponent\";\r\nimport GameScoreBoard from \"./GameScoreBoard\";\r\nimport DiceGuessComponent from \"./DiceGuessComponent\";\r\nimport InfoContainer from \"./InfoContainer\";\r\nimport TruthGuessComponent from \"./TruthGuessComponent\";\r\nimport EndOfRoundInfoComponent from \"./EndOfRoundInfoComponent\";\r\n\r\nconst ref = createRef();\r\n\r\nconst currentDieRef = createRef();\r\nconst OnlineGameComponent = (props) => {\r\n  const [diceNumbers, setDiceNumbers] = useState([]);\r\n  const [illegalGuess, setIllegalGuess] = useState(false);\r\n  const [diceGuessTurn, setDiceGuessTurn] = useState(false);\r\n  const [truthGuessTurn, setTruthGuessTurn] = useState(false);\r\n  const [playerGuessingTruth, setPlayerGuessingTruth] = useState(\"\");\r\n  const [playerGuessingDice, setPlayerGuessingDice] = useState(\"\");\r\n  const [currentGuess, setCurrentGuess] = useState({\r\n    diceValue: 1,\r\n    numberOfDice: 0,\r\n  });\r\n  const [isGuessTurn, setIsGuessTurn] = useState(true);\r\n\r\n  const [endOfRoundInfo, setEndOfRoundInfo] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (!props.socket) return;\r\n    props.socket.on(\"diceRolled\", (data) => {\r\n      setDiceNumbers(data);\r\n      if (ref.current) {\r\n        ref.current.rollAll(data);\r\n      }\r\n    });\r\n\r\n    if (currentDieRef.current) {\r\n      currentDieRef.current.rollAll([1]);\r\n    }\r\n\r\n    props.socket.on(\"turnInfo\", (data) => {\r\n      setPlayerGuessingDice(data.playerGuessingDice);\r\n      setPlayerGuessingTruth(data.playerGuessingTruth);\r\n      setCurrentGuess(data.currentGuess);\r\n      setIsGuessTurn(data.isGuessTurn);\r\n      currentDieRef.current.rollAll([data.currentGuess.diceValue]);\r\n    });\r\n\r\n    props.socket.on(\"getGuess\", () => {\r\n      setDiceGuessTurn(true);\r\n    });\r\n\r\n    props.socket.on(\"getTruth\", () => {\r\n      setTruthGuessTurn(true);\r\n    });\r\n\r\n    props.socket.on(\"endOfRoundInfo\", (data) => {\r\n      setEndOfRoundInfo(data);\r\n    });\r\n  }, [props.socket]);\r\n\r\n  const renderCurrentGuessDie = () => {\r\n    return (\r\n      <ReactDice\r\n        dotColor={props.dotColor ?? \"#ee77ee\"}\r\n        faceColor={props.faceColor ?? \"#6f1111\"}\r\n        numDice={1}\r\n        rollTime={0.1}\r\n        disableIndividual\r\n        ref={currentDieRef}\r\n      />\r\n    );\r\n  };\r\n\r\n  const sendTruth = (bool) => {\r\n    props.socket.emit(\"sendTruth\", bool);\r\n    setTruthGuessTurn(false);\r\n  };\r\n\r\n  const sendGuess = (diceGuess) => {\r\n    if (\r\n      Number.isInteger(diceGuess.diceValue) &&\r\n      Number.isInteger(diceGuess.numberOfDice) &&\r\n      diceGuess.diceValue > 0 &&\r\n      diceGuess.diceValue <= 6\r\n    ) {\r\n      props.socket.emit(\"sendGuess\", diceGuess);\r\n      props.socket.once(\"legalGuess\", (bool) => {\r\n        if (bool) {\r\n          setDiceGuessTurn(false);\r\n          setIllegalGuess(false);\r\n        } else {\r\n          setIllegalGuess(true);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <DiceComponent ref={ref} numberOfDice={diceNumbers.length} />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Card style={{ maxWidth: 200, margin: \"auto\" }}>\r\n            <CardContent>\r\n              Current guess is {currentGuess.numberOfDice} of\r\n              {renderCurrentGuessDie()}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        {diceGuessTurn && (\r\n          <DiceGuessComponent\r\n            socket={props.socket}\r\n            setDiceGuessTurn={setDiceGuessTurn}\r\n            illegalGuess={illegalGuess}\r\n            sendGuess={sendGuess}\r\n          />\r\n        )}\r\n        {truthGuessTurn && <TruthGuessComponent sendTruth={sendTruth} />}\r\n        <InfoContainer\r\n          playerGuessingDice={playerGuessingDice}\r\n          playerGuessingTruth={playerGuessingTruth}\r\n          isGuessTurn={isGuessTurn}\r\n        />\r\n\r\n        <Grid item xs={12}>\r\n          <h5>Players in game</h5>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <GameScoreBoard players={props.players} />\r\n        </Grid>\r\n      </Grid>\r\n      <EndOfRoundInfoComponent data={endOfRoundInfo} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OnlineGameComponent;\r\n","import { Grid, Button } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport OnlineGameComponent from \"./OnlineGameComponent\";\r\nimport GameScoreBoard from \"./GameScoreBoard\";\r\n\r\nconst WaitingRoom = (props) => {\r\n  const [players, setPlayers] = useState([]);\r\n  // sorted by score\r\n  const [sortedPlayers, setSortedPlayers] = useState([]);\r\n  const [isLeader, setIsLeader] = useState(false);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.socket.on(\"playerUpdate\", (data) => {\r\n      setPlayers(data);\r\n      setSortedPlayers(data);\r\n    });\r\n\r\n    props.socket.on(\"allowStartGame\", (data) => {\r\n      setIsLeader(true);\r\n    });\r\n\r\n    props.socket.on(\"gameStarted\", () => {\r\n      setGameStarted(true);\r\n    });\r\n\r\n    props.socket.on(\"gameOver\", (data) => {\r\n      setGameStarted(false);\r\n      setPlayers(data);\r\n      setSortedPlayers(data);\r\n    });\r\n  }, [props.socket]);\r\n\r\n  const startGame = () => {\r\n    props.socket.emit(\"startGame\", {});\r\n  };\r\n\r\n  const renderWaitingRoom = () => (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <h3>Waiting room for room '{props.roomName}'</h3>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <p>Waiting for leader to press play.</p>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <p>\r\n          You want the least points. You get 0 points for winning. You get 1\r\n          point if a there was one person to finish before you and etc.\r\n        </p>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <h5>Players waiting</h5>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <GameScoreBoard players={sortedPlayers} />\r\n      </Grid>\r\n      {isLeader && (\r\n        <Grid item xs={12}>\r\n          <Button onClick={startGame} variant=\"contained\">\r\n            Start game\r\n          </Button>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n\r\n  return !gameStarted ? (\r\n    renderWaitingRoom()\r\n  ) : (\r\n    <OnlineGameComponent players={players} socket={props.socket} />\r\n  );\r\n};\r\n\r\nexport default WaitingRoom;\r\n","import { Input, Button, Grid, Card, CardContent } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { config } from \"../config\";\r\nimport WaitingRoom from \"./WaitingRoom\";\r\n\r\nconst ENDPOINT = config.ENDPOINT;\r\nconst OnlineDicePage = () => {\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [connectedToRoom, setConnectedToRoom] = useState(false);\r\n  const [socket, setSocket] = useState(undefined);\r\n  const [errorJoining, setErrorJoining] = useState(false);\r\n  const [errorJoiningMsg, setErrorJoiningMsg] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const socket = socketIOClient(ENDPOINT);\r\n    setSocket(socket);\r\n    socket.on(\"connectedToRoomCallBack\", (data) => {});\r\n  }, []);\r\n\r\n  const connectToRoom = () => {\r\n    socket.emit(\"connectToRoom\", { playerName: name, roomName: roomName });\r\n    socket.once(\"errorJoining\", (data) => {\r\n      if (!data.errorJoining) {\r\n        setConnectedToRoom(true);\r\n        setErrorJoining(false);\r\n        setErrorJoiningMsg(\"\");\r\n      } else {\r\n        setErrorJoining(true);\r\n        setErrorJoiningMsg(data.errorMsg);\r\n      }\r\n    });\r\n  };\r\n\r\n  const renderConnectToRoom = () => (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <h3>Online dice page</h3>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <p>\r\n          In room name write some name, e.g. \"party\", \"p\" or anything. Then make\r\n          your friends write the same name to connect to your room.\r\n        </p>\r\n      </Grid>\r\n      <Card style={{ margin: \"auto\" }}>\r\n        <CardContent>\r\n          <Grid item xs={12}>\r\n            <Input\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              placeholder=\"Name\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} style={{ paddingTop: 15, paddingBottom: 15 }}>\r\n            <Input\r\n              placeholder=\"Room name\"\r\n              value={roomName}\r\n              onChange={(e) => setRoomName(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button color=\"primary\" variant=\"contained\" onClick={connectToRoom}>\r\n              Connect to room\r\n            </Button>\r\n          </Grid>\r\n          {errorJoining && (\r\n            <Grid item xs={12}>\r\n              {errorJoiningMsg}\r\n            </Grid>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  return !connectedToRoom ? (\r\n    renderConnectToRoom()\r\n  ) : (\r\n    <WaitingRoom roomName={roomName} socket={socket} />\r\n  );\r\n};\r\n\r\nexport default OnlineDicePage;\r\n","import { Grid, Button, Card, CardContent } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport SimpleDicePage from \"./SimpleDicePage\";\r\nimport OnlineDicePage from \"./OnlineDicePage\";\r\nimport \"./FrontPage.css\";\r\n\r\nconst FrontPage = () => {\r\n  const [playOption, setPlayOption] = useState(\"NONE\");\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className=\"container\"\r\n    >\r\n      {playOption === \"SIMPLE\" && (\r\n        <Grid item xs={12}>\r\n          <SimpleDicePage />\r\n        </Grid>\r\n      )}\r\n      {playOption === \"ONLINE\" && (\r\n        <Grid item xs={12}>\r\n          <OnlineDicePage />\r\n        </Grid>\r\n      )}\r\n      {playOption === \"NONE\" && (\r\n        <Card style={{ width: 300, marginTop: 30 }}>\r\n          <CardContent>\r\n            <Grid item xs={6} style={{ paddingBottom: 20, margin: \"auto\" }}>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={() => setPlayOption(\"SIMPLE\")}\r\n              >\r\n                Play simple\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6} style={{ margin: \"auto\" }}>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={() => setPlayOption(\"ONLINE\")}\r\n              >\r\n                Play online\r\n              </Button>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FrontPage;\r\n","import \"./App.css\";\nimport FrontPage from \"./components/FrontPage\";\n\n// another header?\n// hmm\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"header\">Dice game</div>\n      <FrontPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}